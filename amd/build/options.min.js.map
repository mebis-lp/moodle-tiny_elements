{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Options helper for Elements plugin.\n *\n * @module      tiny_elements/options\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPluginOptionName} from 'editor_tiny/options';\nimport {pluginName} from './common';\n\nconst isstudentName = getPluginOptionName(pluginName, 'isstudent');\nconst showpreviewName = getPluginOptionName(pluginName, 'showpreview');\nconst viewElementsName = getPluginOptionName(pluginName, 'viewelements');\nconst cssUrlName = getPluginOptionName(pluginName, 'cssurl');\nconst canManageName = getPluginOptionName(pluginName, 'canmanage');\nconst markComponentsName = getPluginOptionName(pluginName, 'markcomponents');\n\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n\n    registerOption(isstudentName, {\n        processor: 'boolean',\n        \"default\":  false,\n    });\n\n    registerOption(showpreviewName, {\n        processor: 'boolean',\n        \"default\":  true,\n    });\n\n    registerOption(viewElementsName, {\n        processor: 'boolean',\n        \"default\":  true,\n    });\n\n    registerOption(cssUrlName, {\n        processor: 'string',\n        \"default\":  '',\n    });\n\n    registerOption(canManageName, {\n        processor: 'boolean',\n        \"default\":  false,\n    });\n\n    registerOption(markComponentsName, {\n        processor: 'boolean',\n        \"default\":  false,\n    });\n};\n\n/**\n * Get the permissions configuration for the Tiny Elements plugin.\n *\n * @param {TinyMCE} editor\n * @returns {object}\n */\nexport const isElementsVisible = (editor) => editor.options.get(viewElementsName);\n\n/**\n * Get whether user is a student configuration for the Tiny Elements plugin.\n *\n * @param {TinyMCE} editor\n * @returns {object}\n */\nexport const isStudent = (editor) => editor.options.get(isstudentName);\n\n/**\n * Get the preview visibility configuration for the Tiny Elements plugin.\n *\n * @param {TinyMCE} editor\n * @returns {object}\n */\nexport const showPreview = (editor) => editor.options.get(showpreviewName);\n\n/**\n * Get the css url for the Tiny Elements plugin (to be used in the editor).\n * @param {TinyMCE} editor\n * @returns {string}\n */\nexport const getCssUrl = (editor) => editor.options.get(cssUrlName);\n\n/**\n * Whether the use hat tiny_elements/manage capability.\n * @param {TinyMCE} editor\n * @returns boolean\n */\nexport const canManage = (editor) => editor.options.get(canManageName);\n\n/**\n * Whether to inject HTML comments to mark components.\n * @param {TinyMCE} editor\n * @returns boolean\n */\nexport const markComponents = (editor) => editor.options.get(markComponentsName);\n"],"names":["isstudentName","pluginName","showpreviewName","viewElementsName","cssUrlName","canManageName","markComponentsName","editor","registerOption","options","register","processor","get"],"mappings":";;;;;;;;MA0BMA,eAAgB,gCAAoBC,mBAAY,aAChDC,iBAAkB,gCAAoBD,mBAAY,eAClDE,kBAAmB,gCAAoBF,mBAAY,gBACnDG,YAAa,gCAAoBH,mBAAY,UAC7CI,eAAgB,gCAAoBJ,mBAAY,aAChDK,oBAAqB,gCAAoBL,mBAAY,oCAElCM,eACfC,eAAiBD,OAAOE,QAAQC,SAEtCF,eAAeR,cAAe,CAC1BW,UAAW,mBACC,IAGhBH,eAAeN,gBAAiB,CAC5BS,UAAW,mBACC,IAGhBH,eAAeL,iBAAkB,CAC7BQ,UAAW,mBACC,IAGhBH,eAAeJ,WAAY,CACvBO,UAAW,iBACC,KAGhBH,eAAeH,cAAe,CAC1BM,UAAW,mBACC,IAGhBH,eAAeF,mBAAoB,CAC/BK,UAAW,mBACC,gCAUcJ,QAAWA,OAAOE,QAAQG,IAAIT,qCAQtCI,QAAWA,OAAOE,QAAQG,IAAIZ,oCAQ5BO,QAAWA,OAAOE,QAAQG,IAAIV,oCAOhCK,QAAWA,OAAOE,QAAQG,IAAIR,+BAO9BG,QAAWA,OAAOE,QAAQG,IAAIP,uCAOzBE,QAAWA,OAAOE,QAAQG,IAAIN"}