{"version":3,"file":"category_form_helper.min.js","sources":["../src/category_form_helper.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Helper for autocomplete form element to select only variants that belong to the\n * selected category.\n *\n * @module     tiny_elements/category_form_helper\n * @copyright  2025 ISB Bayern\n * @authors    Stefan Hanauska <stefan.hanauska@csg-in.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n\n    return {\n        /**\n         * Process the results for auto complete elements.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {Array} results An array or results.\n         * @return {Array} New array of results.\n         */\n        processResults: function(selector, results) {\n            var options = [];\n            results.forEach((data) => {\n                options.push({\n                    value: data.name,\n                    label: data.displayname\n                });\n            });\n            return options;\n        },\n\n        /**\n         * Source of data for Ajax element.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {String} query The query string.\n         * @param {Function} callback A callback function receiving an array of results.\n         */\n        /* eslint-disable promise/no-callback-in-promise */\n        transport: function(selector, query, callback) {\n            var el = document.querySelector(selector);\n            if (!el) {\n                return;\n            }\n            const contextid = el.dataset.contextid ?? 1;\n            const categoryname = el.closest('form').querySelector('select[name=\"categoryname\"]').value;\n\n            let methodname = 'tiny_elements_get_variants';\n            if (el.name == 'flavors[]') {\n                methodname = 'tiny_elements_get_flavors';\n            }\n\n            Ajax.call([{\n                methodname: methodname,\n                args: {\n                    contextid: contextid,\n                    categoryname: categoryname,\n                    query: query,\n                }\n            }])[0].then(callback).catch(Notification.exception);\n        }\n    };\n\n});\n"],"names":["define","$","Ajax","Notification","processResults","selector","results","options","forEach","data","push","value","name","label","displayname","transport","query","callback","el","document","querySelector","contextid","dataset","categoryname","closest","methodname","call","args","then","catch","exception"],"mappings":";;;;;;;;;AAyBAA,4CAAO,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,oBAE5D,CAQHC,eAAgB,SAASC,SAAUC,aAC3BC,QAAU,UACdD,QAAQE,SAASC,OACbF,QAAQG,KAAK,CACTC,MAAOF,KAAKG,KACZC,MAAOJ,KAAKK,iBAGbP,SAWXQ,UAAW,SAASV,SAAUW,MAAOC,oCAC7BC,GAAKC,SAASC,cAAcf,cAC3Ba,gBAGCG,wCAAYH,GAAGI,QAAQD,iEAAa,EACpCE,aAAeL,GAAGM,QAAQ,QAAQJ,cAAc,+BAA+BT,UAEjFc,WAAa,6BACF,aAAXP,GAAGN,OACHa,WAAa,6BAGjBvB,KAAKwB,KAAK,CAAC,CACPD,WAAYA,WACZE,KAAM,CACFN,UAAWA,UACXE,aAAcA,aACdP,MAAOA,UAEX,GAAGY,KAAKX,UAAUY,MAAM1B,aAAa2B"}