{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Elements commands.\n *\n * @module      tiny_elements/commands\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {handleAction} from './ui';\nimport {\n    component,\n    elementsButtonName,\n    elementsMenuItemName,\n    icon,\n} from './common';\nimport {isElementsVisible} from './options';\n\nexport const getSetup = async() => {\n    const [\n        elementsButtonNameTitle,\n        elementsMenuItemNameTitle,\n        buttonImage,\n    ] = await Promise.all([\n        getString('button_elements', component),\n        getString('menuitem_elements', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        if (isElementsVisible(editor)) {\n            // Register the Elements Icon.\n            editor.ui.registry.addIcon(icon, buttonImage.html);\n\n            // Register the Elements Toolbar Button.\n            editor.ui.registry.addButton(elementsButtonName, {\n                icon,\n                tooltip: elementsButtonNameTitle,\n                onAction: () => handleAction(editor),\n            });\n\n            // Add the Elements Menu Item.\n            // This allows it to be added to a standard menu, or a context menu.\n            editor.ui.registry.addMenuItem(elementsMenuItemName, {\n                icon,\n                text: elementsMenuItemNameTitle,\n                onAction: () => handleAction(editor),\n            });\n        }\n    };\n};\n"],"names":["async","elementsButtonNameTitle","elementsMenuItemNameTitle","buttonImage","Promise","all","component","editor","ui","registry","addIcon","icon","html","addButton","elementsButtonName","tooltip","onAction","addMenuItem","elementsMenuItemName","text"],"mappings":"iQAkCwBA,gBAEhBC,wBACAC,0BACAC,mBACMC,QAAQC,IAAI,EAClB,mBAAU,kBAAmBC,oBAC7B,mBAAU,oBAAqBA,oBAC/B,yBAAe,OAAQA,4BAGnBC,UACA,8BAAkBA,UAElBA,OAAOC,GAAGC,SAASC,QAAQC,aAAMR,YAAYS,MAG7CL,OAAOC,GAAGC,SAASI,UAAUC,2BAAoB,CAC7CH,KAAAA,aACAI,QAASd,wBACTe,SAAU,KAAM,oBAAaT,UAKjCA,OAAOC,GAAGC,SAASQ,YAAYC,6BAAsB,CACjDP,KAAAA,aACAQ,KAAMjB,0BACNc,SAAU,KAAM,oBAAaT"}